//C冶炼金属
//题目描述
//小蓝有一个神奇的炉子用于将普通金属 O 冶炼成为一种特殊金属 X。这个炉子有一个称作转换率的属性 V，V 是一个正整数，这意味着消耗 V 个普通金
//属 O 恰好可以冶炼出一个特殊金属 X，当普通金属 O 的数目不足 V 时，无法继续冶炼。
//现在给出了 N 条冶炼记录，每条记录中包含两个整数 A 和 B，这表示本次投入了 A 个普通金属 O，最终冶炼出了 B 个特殊金属 X。每条记录都是独立
//的，这意味着上一次没消耗完的普通金属 O 不会累加到下一次的冶炼当中。
//根据这 N 条冶炼记录，请你推测出转换率 V 的最小值和最大值分别可能是多少，题目保证评测数据不存在无解的情况。
//输入格式
//第一行一个整数 N，表示冶炼记录的数目。
//接下来输入 N 行，每行两个整数 A、B，含义如题目所述。
//输出格式
//输出两个整数，分别表示 V 可能的最小值和最大值，中间用空格分开。
//样例输入
//3
//75 3
//53 2
//59 2
//样例输出
//20 25
//提示
//当 V = 20 时，有：⌊75/20⌋ = 3，⌊ 53/20 ⌋ = 2，⌊ 59/20 ⌋ = 2，可以看到符合所有冶炼记录。
//当 V = 25 时，有：⌊75/25⌋ = 3，⌊ 53/25 ⌋ = 2，⌊ 59/25 ⌋ = 2，可以看到符合所有冶炼记录。
//且再也找不到比 20 更小或者比 25 更大的符合条件的 V 值了。
//对于 30% 的评测用例，1 ≤ N ≤ 10^2。
//对于 60% 的评测用例，1 ≤ N ≤ 10^3。
//对于 100% 的评测用例，1 ≤ N ≤ 10^4，1 ≤ B ≤ A ≤ 10^9。

//题目要求冶炼的下限的最大值（输出结果+1）、上限的最小值
//可以触碰的冶炼上限：a/b 是在满足题意的情况下，冶炼单位特殊金属所使用的最大普通金属数量（再大普通金属就不够用了）
//不能触碰的冶炼下限：a/(b+1)是刚好冶炼多一个特殊金属时，单位特殊金属所使用的最小普通金属数量（再小（包括等于）特殊金属就会变多），不能取到，只能往大一个单位，这也是我们为什么最终min+1的原因！！！
#include <stdio.h>
int main() {
	int n, a, b, flag = 0; // flag用来标记是否为第一次输入
	scanf("%d", &n); // 输入n组数据
	int min = 1, max = 1;
	for(int i = 0; i < n; ++ i) { // 处理n组数据
		scanf("%d%d", &a, &b); // 输入普通金属、特殊金属数量
		
		if(a / b < max && flag == 1) { // 维护上限最小值
			max = a / b;
		}
		if(a / (b + 1) > min && flag == 1) { // 维护下限最大值
			min = a / (b + 1);
		}
		if(flag == 0) { // 让第一次输入的数据作为大小判断的成员，这样就不用考虑max和min的初始值值
			max = a / b;
			min = a / (b + 1);
			flag = 1;
		}
	}
	printf("%d %d\n", min + 1, max); // 下限不能触碰
	return 0;
}
