// C 数的分解
// 题目描述
// 把 2019分解成 3个各不相同的正整数之和，并且要求每个正整数都不包含数字2和4，一共有多少种不同的分解方法？
// 注意交换 3个整数的顺序被视为同一种方法，例如 1000+1001+18和1001+1000+18被视为同一种。
// 分析分析：
// 怎么说，咱就是说，既然已经告诉我们是多少了就不要客气啦，暴力算一算，这里主要的问题就是我们要对于位数有一个判断，还有就是他们要互不相等。
#include <stdio.h>
int panduan(int n) {
    while(n > 0) {
        if((n % 10) == 2 || (n % 10) == 4) {
            // 含有就直接退出
            return 0;
            n /= 10;
        }
    } // 没有退出运行到循环结束（不含2和4）
    return 1;
}
int main() {
    int count = 0;
    for(int i = 1; i < 2019; ++ i) {
        if(panduan(i)) {
            for(int j = i + 1; j < 2019 - i - j; ++ j) { // j是第二个数，2019-i-j是第三个数
                if(i != j && i != (2019-i-j) && j != (2019-i-j)) { // 三者不相等
                    if(panduan(j) && panduan(2019-i-j)) { // 既要满足j满足和第三个数满足
                        count ++;
                    }
                }
            }
        }
    }
    printf("%d", count); // 40875
}