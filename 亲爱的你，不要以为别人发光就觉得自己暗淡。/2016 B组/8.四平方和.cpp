// H 四平方和
// 题目描述：
// 四平方和定理，又称为拉格朗日定理：
// 每个正整数都可以表示为至多4个正整数的平方和。
// 如果把0包括进去，就正好可以表示为4个数的平方和。比如：
// 5 = 0^2 + 0^2 + 1^2 + 2^2
// 7 = 1^2 + 1^2 + 1^2 + 2^2
// （^符号表示乘方的意思）
// 对于一个给定的正整数，可能存在多种平方和的表示法。
// 要求你对4个数排序：
// 0 <= a <= b <= c <= d
// 并对所有的可能表示法按 a,b,c,d 为联合主键升序排列，最后输出第一个表示法
// 程序输入为一个正整数N (N<5000000)
// 要求输出4个非负整数，按从小到大排序，中间用空格分开
// 例如，输入：
// 5
// 则程序应该输出：
// 0 0 1 2
// 再例如，输入：
// 12
// 则程序应该输出：
// 0 2 2 2
// 再例如，输入：
// 773535
// 则程序应该输出：
// 1 1 267 838
// 分析分析：
// ???dfs就直接出来了
// 题目代码
#include <stdio.h>

int sum;
int tmp[40];
int flag;

void dfs(int x, int step, int left) {
    if (flag)
        return;
    if (step == 4) {
        if (left == 0) {
            for (int i = 1; i <= 4; i++) // 输出我们的数组
                printf("%d ", tmp[i]);
            printf("\n");
            flag = 1;
        }
        return;
    }
    for (int i = x; i * i <= left; i++) {
        tmp[step + 1] = i;
        dfs(i, step + 1, left - i * i);
    }
}

int main() {
    scanf("%d", &sum);
    dfs(0, 0, sum);
    return 0;
}
