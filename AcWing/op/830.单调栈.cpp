/*830.单调栈
给定一个长度为N的整数数列，输出每个数左边第一个比它小的数，如果不存在则输出-1。
输入格式
第一行包含整数N，表示数列长度。
第二行包含N个整数，表示整数数列。
输出格式
共一行，包含N个整数，其中第i个数表示第i个数的左边第一个比它小的数，如果不存在则输出-1。
数据范围
1≤N≤10^5 1≤数列中元素≤10^9
输入样例：
5 3 4 2 7 5
输出样例：
-1 3 -1 2 2*/
/**/
#include <iostream>
using namespace std;
const int N = 100010;
int stk[N], tt;
int main() {
    int n;
    cin >> n;
    while (n -- ) {
        int x;
        scanf("%d", &x);
        while (tt && stk[tt] >= x) //当栈是不空的并且栈里的元素是大于当前这个数字的，那么栈里的元素就不会被用到   
            tt -- ;
        if (!tt) printf("-1 ");//如果都大于，说明没有，就输出-1 
        else printf("%d ", stk[tt]);//如果存在小于的，就输出 
        stk[ ++ tt] = x;//然后把x放进去 
    }
    return 0;
}