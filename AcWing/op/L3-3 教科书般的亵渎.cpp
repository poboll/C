/*L3-3 教科书般的亵渎
九条可怜最近在玩一款卡牌游戏。在每一局游戏中，可怜都要使用抽到的卡牌来消灭一些敌人。每一名敌人都有一个初始血量，而当血量降低到 0 及以下的时候，这名敌人就会立即被消灭并从场上消失。
现在，可怜面前有 n 个敌人，其中第 i 名敌人的血量是 a 
i ，而可怜手上只有如下两张手牌：如果场上还有敌人，等概率随机选中一个敌人并对它造成一点伤害（即血量减 1），重复 K 次。
对所有敌人造成一点伤害，重复该效果直到没有新的敌人被消灭。
下面是这两张手牌效果的一些示例：
假设存在两名敌人，他们的血量分别是 1,2 且 K=2。那么在可怜打出第一张手牌后，可能会发生如下情况：
第一轮中，两名敌人各有 0.5 的概率被选中。假设第一名敌人被选中，那么它会被造成一点伤害。这时它的血量变成了 0，因此它被消灭并消失了。
第二轮中，因为场上只剩下了第二名敌人，所以它一定会被选中并被造成一点伤害。这时它剩下的血量为 1。
同样假设存在两名敌人且血量分别为 1,2。那么在可怜打出第二张手牌后，会发生如下情况：
第一轮中，所有敌人被造成了一点伤害。这时第一名敌人被消灭了，因此卡牌效果会被重复一遍。
第二轮中，所有敌人（此时只剩下第二名敌人了）被造成了一点伤害。这时第二名敌人也被消灭了，因此卡牌效果会被再重复一遍。
第三轮中，所有敌人（此时没有敌人剩下了）被造成了一点伤害。因为没有新的敌人被消灭了，所以卡牌效果结束。
如果面对的是四名血量分别为 1,2,2,4 的敌人，那么在可怜打出第二张手牌后，只有第四名敌人还会存活，且它的剩余血量为 1。
现在，可怜先打出了第一张手牌，再打出了第二张手牌。她发现，在第一张手牌效果结束后，没有任何一名敌人被消灭，但是在第二张手牌的效果结束后，所有敌人都被消灭了。
可怜想让你计算一下这种情况发生的概率是多少。
输入格式：
第一行输入两个整数 n,K(1≤n,K≤50)，分别表示敌人的数量以及第一张卡牌效果的发动次数。
第二行输入 n 个由空格隔开的整数 a 
i (1≤a i≤50)，表示每个敌人的初始血量。
输出格式：
在一行中输出一个整数，表示发生概率对 998244353 取模后的结果。
具体来说，如果概率的最简分数表示为 a/b(a≥0,b≥1,gcd(a,b)=1)，那么你需要输出
a×b 
998244351
 mod998244353。
输入样例 1：
3 2
2 3 3
输出样例 1：
665496236
样例解释 1：
在第一张手牌的效果结束后，三名敌人的剩余血量只可能在如下几种中：[1,3,2], [1,2,3], [2,1,3] 和 [2,3,1]。前两种发生的概率是 2/9，后两种发生的概率是 1/9。因此答案为 2/3，输出 2×3 
998244351
 mod998244353=665496236。
输入样例 2：
3 3
2 3 3
输出样例 2：
776412275
样例解释 2:
在第一张手牌的效果结束后，三名敌人的剩余血量只可能在如下几种中：[1,2,2]、[2,1,2] 和 [2,2,1]。第一种发生的概率是 2/9，后两种发生的概率是 1/9。因此答案为 4/9，输出 4×9 
998244351
 mod998244353=776412275。
输入样例 3：
5 3
1 4 4 2 5
输出样例 3：
367353922
输入样例 4：
12 12
1 2 3 4 5 6 7 8 9 10 11 12
输出样例 4：
452061016
代码长度限制
16 KB
时间限制
2000 ms
内存限制
256 MB*/
/*解题思路：
沉迷数学题，无法自拔.
得到一个敌人被砍k回的概率为: $1/n*(1-(1/n))^{k-1}+(n-1)/n*((1/n'))^{k-1}*k*(ai-k+1)/ai$，对于第一项的理解不多说，对于第二项有三个部分: $(1/n')^{k-1}$表示第一个人没挂时所有人相对概率均等，$k*(ai-k+1)/ai$表示第二次最小值*次数，即$K*(a_i-K+1)/a_i$发动后对 $i$ 号敌人的影响. 针对这个东西求一下期望值, 即每个敌人被打的平均次数$E_i$,根据期望线性性质，最后是将$E_i$累加 求和再统计总体概率..为了简便，先用另外的 $dp[i][j]$表示所有剩余血量为 $j$ 的人中，最后还剩两个人、三个人…… $i+1$ 个人的情况总共的方案数（已经除以 $n!$ 且已平均），而统计答案的时候就只需要考虑只剩一人的情况。求$dp[i][j]$，假设当前是 $k$ 轮（即 $\color{#FF000}一回合$），考虑最后被消灭的是哪些人。 假设第 $a,b$ 个人剩下： 通过之前的推导，得到了每个人在 $k$ 轮中被消灭概率为 $p_j$。 那么如果不是第 $a,b$ 个人，那么就有 $(1-p_a)(1-p_b)$ 的概率都没有被消灭，此时有 $dp[i][j]$ 种方案，另一种是第 $a$ 个人和 $b$ 个人其中之一被消灭，此时有 $2\times dp[i+1][j-1]\times p_k$ 种情况。对应初始状态 $dp[0]$，对于剩余血量为 $j$ 的敌人暴力排序后分别求出所有方案数去枚举相同血量的两个人被消除即可（$$dp[0][j]=\frac{n!}{(a_{ord_j}-k-1)!}\sum_{q=0}^{n-2}\sum_{w=q+1}^{n-1}\frac{(1-p_{ord[w]})(1-p_{ord[q]})+2\times p_{ord[w]}\times p_{ord[q]}\times dp[1][j-1]}{n!}$$）
$$dp[i][j]=\frac{n!}{(i+j-k-1)!}\sum_{t=i}^{t<=n && j-a_{ord_t}+k<=n}\frac{\sum_{s=0}^{t-i-1}\sum_{y=s+1}^{t-i}(1-p_{ord_j})^s(1-p_{ord_{j'}})^{t-i-s-1}\times2\times p_{ord_j}\times p_{ord_{j'}}\times dp[i+1][j-1]}{n!}$$
时间复杂度：$\mathcal O(n^3)$*/
#include <iostream>
#include <algorithm>

using namespace std;
